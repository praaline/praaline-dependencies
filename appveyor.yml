version: '{build}'

init:
- git config --global core.autocrlf input

environment:
  matrix:
  - arch: x86
    QT5: C:\Qt\5.10.1\mingw53_32
    MINGW: C:\Qt\Tools\mingw530_32

matrix:
  fast_finish: true

before_build:
- set PATH=%MINGW%\bin;%QT5%\bin;%PATH%
- echo %PATH%
- ps: $env:COMMIT_TIMESTAMP = $(Get-Date -format yyyy-MM-dd)

build_script:
- if not exist build mkdir build
- cd build

# Build Praaline dependencies
- echo %COMMIT_TIMESTAMP%
- qmake -v
- qmake ..\praaline-dependencies.pro CONFIG+=release && mingw32-make
- dir /s

# Package (Current directory is C:\projects\praaline-dependencies\)
- cd ..
- mkdir deploy
- copy build\qscintilla\Qt4Qt5\build\release\qscintilla2_qt5.dll deploy\qscintilla2_qt5.dll
- copy build\qtilities\build\release\QtilitiesCore-1.5.dll deploy\QtilitiesCore-1.5.dll
- copy build\qtilities\build\release\QtilitiesCoreGui-1.5.dll deploy\QtilitiesCoreGui-1.5.dll
- copy build\qtilities\build\release\QtilitiesExtensionSystem-1.5.dll deploy\QtilitiesExtensionSystem-1.5.dll
- copy build\qtilities\build\release\QtilitiesLogging-1.5.dll deploy\QtilitiesLogging-1.5.dll
- copy build\qtilities\build\release\QtilitiesProjectManagement-1.5.dll deploy\QtilitiesProjectManagement-1.5.dll
- copy build\qtpropertybrowser\build\release\qtpropertybrowser.dll deploy\qtpropertybrowser.dll
- 7z a praaline_dependencies_win_%arch%.zip .\deploy\*

artifacts:
- path: praaline_dependencies_win_%arch%.zip

deploy:
  - provider: GitHub
    release: $(COMMIT_TIMESTAMP)
    auth_token: 
      secure: QP8Fu6Yw87cA6bQ0G7hf/MPFzYw0+/wwnLKnMahrETh7gPXh5Ad/2gOIEfvGrfpn
    artifact: praaline_dependencies_win_%arch%.zip
    force_update: true
    on: 
      branch: master

test: off  # to avoid discovering tests

